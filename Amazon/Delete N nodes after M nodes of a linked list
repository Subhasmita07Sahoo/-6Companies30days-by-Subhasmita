Given a linked list, delete n nodes after skipping m nodes of a linked list until the last of the linked list.
Examples:

Input: Linked List: 9->1->3->5->9->4->10->1, n = 1, m = 2

Output: 9->1->5->9->10->1

Explanation: Deleting 1 node after skipping 2 nodes each time, we have list as 9-> 1-> 5-> 9-> 10-> 1.

class Solution {
    static void linkdelete(Node head, int n, int m) {
        // your code here
        
        Node temp = head, t;
        int count = 0;      
        while (temp != null)
        {
            for (count = 1; count < m && temp != null; count++) 
                temp = temp.next; 

            if (temp == null) 
                return;
                
            t = temp.next; 
            for (count = 1; count <= n && t != null; count++) 
            {

                t = t.next; 
            }
            temp.next = t; 
            temp = t;      
        }
    }
}
