Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

Example 1:

Input: s = "leetcode"
Output: 0

Explanation:
The character 'l' at index 0 is the first character that does not occur at any other index.

TC:- O(n)
SC:- O(1)

class Solution {
    public int firstUniqChar(String s) {
        
        int n = s.length();
        int hash[] = new int[26];

        for(int i=0 ; i < n ; i++)
        {
            char ch = s.charAt(i) ;
            hash[ch - 'a']++ ;
        }

        for(int i=0 ; i < n ; i++)
        {
            char ch = s.charAt(i) ;
            if(hash[ch - 'a'] == 1)
                return i ;
        }

        return -1 ;
    }
}
