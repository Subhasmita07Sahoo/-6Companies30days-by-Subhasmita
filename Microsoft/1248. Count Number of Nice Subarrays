Given an array of integers nums and an integer k. A continuous subarray is called nice if there are k odd numbers on it.
Return the number of nice sub-arrays.

Example 1:

Input: nums = [1,1,2,1,1], k = 3
Output: 2
Explanation: The only sub-arrays with 3 odd numbers are [1,1,2,1] and [1,2,1,1].


****************************************************************************JAVA***********************************************************************************************
TC:- O(n)
SC:- O(1)

class Solution {
    public int numberOfSubarrays(int[] nums, int k) {
        return helper(nums, k) - helper(nums, k - 1);
    }
    
    public int helper(int[] nums, int goal) 
    {
        if (goal < 0) return 0;
        
        int l = 0, r = 0, sum = 0, cnt = 0;
        
        while (r < nums.length)
        {
            sum += nums[r] % 2 ;
            while (sum > goal && l < nums.length)
            {
                sum -= nums[l] % 2 ;
                l++;
            }

            cnt += (r - l + 1);
            r++;
        }
        
        return cnt;
    }
}
