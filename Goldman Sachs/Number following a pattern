Given a pattern containing only I's and D's. I for increasing and D for decreasing. Devise an algorithm to print the minimum number following that pattern. Digits from 1-9 and digits can't repeat.

Example 1:

Input:
D
Output:
21
Explanation:
D is meant for decreasing, so we choose the minimum number among all possible numbers like 21,31,54,87,etc.


//User function Template for Java
class Solution{
    static String printMinNumberForPattern(String s){
        // code here
        StringBuilder ans = new StringBuilder();
        Stack<Integer> st = new Stack<>();
        int n = s.length();
        
        for (int i = 0; i <= n; i++) {
            st.push(i + 1);
            if (i == n || s.charAt(i) == 'I') {
                while (!st.isEmpty()) {
                    ans.append(st.pop());
                }
            }
        }
        
        return ans.toString();
    }
}
